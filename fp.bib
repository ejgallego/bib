%% Traduccion a combinadores

@ARTICLE{Jacobs97atutorial,
    author = {Bart Jacobs and Jan Rutten},
    title = {A Tutorial on (Co)Algebras and (Co)Induction},
    journal = {EATCS Bulletin},
    year = {1997},
    volume = {62},
    pages = {62--222}
}

@Book{barendregt84,
  author =	 {Hendrik Pieter Barendregt},
  title = 	 {The Lambda Calculus, its Syntax and Semantics},
  publisher = 	 {North Holland},
  year = 	 1984,
  volume =	 103,
  series =	 {Studies in Logic and Mathematics}}

@Book{CL1,
  author = 	 {Haskell B. Curry and Robert Feys},
  title = 	 {Combinatory Logic},
  publisher = 	 {North Holland},
  year = 	 1958,
  volume =	 {I}}

@Book{CL2,
  author = 	 {Haskell B. Curry and J. Roger Hindley and Jonathan
                  P. Seldin},
  title = 	 {Combinatory Logic},
  publisher = 	 {North Holland},
  year = 	 1972,
  volume =	 {II}}

@Book{hindleyseldin2008,
  author = 	 {J. Roger Hindley and Jonathan P. Seldin},
  title = 	 {Lambda Calculus and Combinators: an Introduction},
  publisher = 	 {Cambridge University Press},
  year = 	 2008}

@Book{combFP,
  editor =	 {Guy Cousineau, Pierre-Louis Curien and Bernard Robinet},
  title = 	 {Combinators and Functional Programming Languages},
  publisher = 	 {Springer},
  year = 	 1985,
  volume =	 242,
  series =	 {Lecture Notes in Computer Science}}

@Article{turner79SKIBC,
  author = 	 {D. A. Turner},
  title = 	 {A New Implementation Technique for Applicative
                  Languages}, 
  journal = 	 {Software -- Practice and Experience},
  year = 	 1979,
  volume =	 9,
  pages =	 {31 -- 49}}

%% Implementación de lenguajes funcionales:
% Miranda y Haskell:

% Nice Tuner's Miranda
@inproceedings{5281,
 author = {D. A. Turner},
 title = {Miranda: a non-strict functional language with polymorphic types},
 booktitle = {Proc. of a conference on Functional programming languages and computer architecture},
 year = {1985},
 isbn = {3-387-15975-4},
 pages = {1--16},
 location = {Nancy, France},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
 }

% Report de Haskell
@Manual{haskell98,
  title =        {Report on the Programming Language Haskell 98. A Non-strict Purely Functional Language},
  author =       {S. Peyton Jones and J. Hughes},
  year          = {1999},
  month         = {February}
}
%%

@inproceedings{734146,
 author = {Philip Wadler},
 title = {Monads for Functional Programming},
 booktitle = {Advanced Functional Programming, First International Spring School on Advanced Functional Programming Techniques-Tutorial Text},
 year = {1995},
 isbn = {3-540-59451-5},
 pages = {24--52},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

% Un clásico
@Book{jones85:_implem_funct_progr_languag,
  author =       {Simon L. Peyton Jones},
  editor =       {C.A.R. Hoare},
  title =        {The Implementation of Functional Programming Languages},
  publisher =    {Prentice-Hall},
  year =         1985,
  series =       {International Series in Computer Science}
}

@book{DBLP:books/aw/FieldH88,
  author    = {A. J. Field and
               Peter G. Harrison},
  title     = {Functional Programming},
  publisher = {Addison-Wesley},
  year      = {1988},
  isbn      = {0-201-19249-7},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@Article{Backus:1978:CPL,
  author =       "John Backus",
  title =        "Can Programming Be Liberated From the {von Neumann}
                 Style? {A} Functional Style and its Algebra of
                 Programs",
  volume =       "21",
  number =       "8",
  pages =        "613--641",
  month =        aug,
  year =         "1978",
  CODEN =        "CACMA2",
  DOI =          "http://doi.acm.org/10.1145/359576.359579",
  ISSN =         "0001-0782",
  bibdate =      "Mon Jan 22 06:22:32 MST 2001",
  bibsource =    "Compendex database;
                 ftp://ftp.ira.uka.de/pub/bibliography/Distributed/QLD/1978.bib;
                 ftp://ftp.ira.uka.de/pub/bibliography/Parallel/par.misc.bib;
                 http://dblp.uni-trier.de/db/journals/cacm/cacm21.html#Backus78",
  abstract =     "Conventional programming languages are growing ever
                 more enormous, but not stronger. Inherent defects at
                 the most basic level cause them to be both fat and
                 weak: their primitive word-at-a-time style of
                 programming inherited from their common ancestor, the
                 von Neumann computer; their division of programming
                 into a world of expressions and a world of statements;
                 their inability to effectively use powerful combining
                 forms for building new programs from existing ones; and
                 their lack of useful mathematical properties for
                 reasoning about programs. An alternative functional
                 style of programming is founded on the use of combining
                 forms for creating programs. Functional programs deal
                 with structured data, are often nonrepetitive and
                 nonrecursive, are hierarchically constructed, do not
                 name their arguments, and do not require the complex
                 machinery of procedure declarations to become generally
                 applicable. Combining forms can use high level programs
                 to build still higher level ones in a style not
                 possible in conventional languages.",
  acknowledgement = ack-nhfb,
  annote =       "Conventional programming languages are growing ever
                 more enormous, but not stronger. Inherent defects at
                 the most basic level cause them to be both fat and
                 weak: their primitive word-at-a-time style of
                 programming inherited from their common ancestor - the
                 von Neumann computer, their close coupling of semantics
                 to state transitions, their division of programming
                 into a world of expressions and a world of statements,
                 their inability to effectively \ldots{}",
  classcodes =   "C6140 (Programming languages)",
  classification = "723",
  corpsource =   "IMB Res. Lab., San Jose, CA, USA",
  descriptors =  "Programming language; reliability; future outlook; von
                 Neumann computer; applicative computing system;",
  journalabr =   "Commun ACM",
  keywords =     "4.29; 5.20; 5.24; 5.26; algebra of programs;
                 applicative computing systems; combining forms;
                 computer metatheory; conventional languages; CR
                 categories: 4.20; functional style; grecommended91; Key
                 words and phrases: functional programming;
                 metacomposition; models of computing systems; program
                 correctness; program termination; program
                 transformation; programming languages; Rhighnam;
                 structured data; theory ak; Turing Award Lecture; von
                 Neuman style; von Neumann computers; von Neumann
                 languages",
  oldlabel =     "Backus78",
  remark =       "This is the 1977 ACM Turing Award Lecture.",
  treatment =    "T Theoretical or Mathematical",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cacm/Backus78",
}

% Implementación de las type classes en Haskell
@inproceedings{peterson93implementing,
    author = "John Peterson and Mark P. Jones",
    title = "Implementing Type Classes",
    booktitle = "{SIGPLAN} Conference on Programming Language Design and Implementation",
    pages = "227-236",
    year = "1993",
    url = "http://citeseer.ist.psu.edu/peterson93implementing.html" }

@article{227700,
 author = {Cordelia V. Hall and Kevin Hammond and Simon L. Peyton Jones and Philip L. Wadler},
 title = {Type classes in Haskell},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {18},
 number = {2},
 year = {1996},
 issn = {0164-0925},
 pages = {109--138},
 doi = {http://doi.acm.org/10.1145/227699.227700},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

% GHC

@Misc{prog:ghc,
  author =       {Simon Peyton Jones and others.},
  title =        {{GHC}: The {G}lasgow {H}askell {C}ompiler},
  year =  2007,
  url =          {http://www.haskell.org/ghc/}
}

%% Lisp y scheme.
@techreport{889230,
 author = {Gerald J. Sussman and Guy L. Steele, Jr.},
 title = {An Interpreter for Extended Lambda Calculus},
 year = 1975,
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Amitai%3AMIT-AILab%2F%2FAIM-349},
 publisher = {Massachusetts Institute of Technology},
 address = {Cambridge, MA, USA},
}

@article{ jr93evolution,
    author = "Guy L. {Steele, Jr.} and Richard P. Gabriel",
    title = "The evolution of {Lisp}",
    journal = "ACM SIG{\-}PLAN Notices",
    volume = 28,
    number = 3,
    pages = "231--270",
    year = 1993,
    url = "http://citeseer.ist.psu.edu/steele93evolution.html"
}

@InProceedings{johnson85:_lambd_lifting,
  author =       {T. Johnson},
  title =        {Lambda Lifting: Transforming Programs to Recursive Equations},
  booktitle =    {Proceedings of the conference 25 on Functional Programming and Computer Architecture},
  pages =        {190--203},
  year =         1985,
  volume =       {201 of LNCS},
  publisher =    {Springer-Verlag New York, Inc.}}

%% La STGM
@article{ johnsson84efficient,
    author = "T. Johnsson",
    title = "Efficient Compilation of Lazy Evaluation",
    booktitle = "Proceedings of the {ACM} {SIGPLAN}'84 Symposium on Compiler Con struction",
    journal = "SIGPLAN Notices",
    volume = "19",
    number = "6",
    month = "June",
    publisher = "ACM Press",
    pages = "58--69",
    year = "1984",
    url = "http://citeseer.ist.psu.edu/johnsson84efficient.html" }
}

%% LCF
@techreport{891977,
 author = {Robin Milner},
 title = {Models of {LCF}.},
 year = {1973},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Astan%3ASTAN%2F%2FCS-TR-73-332},
 publisher = {Stanford University},
 address = {Stanford, CA, USA},
 }

%% Hope
@inproceedings{802799,
 author = {R. M. Burstall and D. B. MacQueen and D. T. Sannella},
 title = {HOPE: An experimental applicative language},
 booktitle = {LFP '80: Proceedings of the 1980 ACM conference on LISP and functional programming},
 year = {1980},
 pages = {136--143},
 location = {Stanford University, California, United States},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@techreport{hudak94haskell,
    author = "Paul Hudak and Mark P. Jones",
    title = "Haskell vs. Ada Vs. {C}++ vs Awk vs \ldots An Experiment in Software Prototyping Productivity",
    pages = "17",
    year = "1994",
    url = "citeseer.ist.psu.edu/hudak94haskell.html" }

@article{Moggi199155,
title = "Notions of computation and monads",
journal = "Information and Computation",
volume = "93",
number = "1",
pages = "55 - 92",
year = "1991",
note = "Selections from 1989 IEEE Symposium on Logic in Computer Science",
issn = "0890-5401",
doi = "DOI: 10.1016/0890-5401(91)90052-4",
url = "http://www.sciencedirect.com/science/article/B6WGK-4DX4K5F-P/2/a5ad300540b29452e7e41eed22de9e89",
author = "Eugenio Moggi"
}

@article{DBLP:journals/tcs/Wadler07,
  author    = {Philip Wadler},
  title     = {The Girard-Reynolds isomorphism (second edition)},
  journal   = {Theor. Comput. Sci.},
  volume    = {375},
  number    = {1-3},
  year      = {2007},
  pages     = {201-226},
  ee        = {http://dx.doi.org/10.1016/j.tcs.2006.12.042},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@misc{ocamlrefman,
  author =       {Xavier Leroy and Damien Doligez and Alain Frisch and
                  Jacques Garrigue and Didier {R\'emy} and {J\'er\^ome}
                  Vouillon},
  title =        {The OCaml system (release 3.12): Documentation and
                  user's manual},
  organization = {Institut National de Recherche en Informatique et en
Automatique},
  year =         2011,
  month=         {jul},
  url = {http://caml.inria.fr/distrib/ocaml-3.12/ocaml-3.12-refman.pdf},
}

@inproceedings{Armstrong:2007:HE:1238844.1238850,
 author = {Armstrong, Joe},
 title = {A history of Erlang},
 booktitle = {Proceedings of the third ACM SIGPLAN conference on History of programming languages},
 series = {HOPL III},
 year = {2007},
 isbn = {978-1-59593-766-7},
 location = {San Diego, California},
 pages = {6-1--6-26},
 url = {http://doi.acm.org/10.1145/1238844.1238850},
 doi = {10.1145/1238844.1238850},
 acmid = {1238850},
 publisher = {ACM},
 address = {New York, NY, USA},
}

